{#
  Render field block
  Parameters:
    field - a FieldDescriptor instance
    spaces - number of spaces
    isLastItem - whether or not to add comma at the end of the block
#}
{% macro draw_field(field, spaces, isLastItem) %}
{% set spaces = '%' ~ spaces ~ 's' %}
{% if field.description %}
{% set lines = field.description|split("\n") %}
/*
{% for line in lines %}
{{ spaces|format('') }} * {{ line|reduceSpaces }}
{% endfor %}
{{ spaces|format('') }} */
{{ spaces|format('') }}Fb.create('{{ field.name }}', {{ className(field.type) }}.create())
{% else %}
Fb.create('{{ field.name }}', {{ className(field.type) }}.create())
{% endif %}
{% if field.isASingleValue %}
  {{ spaces|format('') }}.asASingleValue()
{% endif %}
{% if field.isASet %}
  {{ spaces|format('') }}.asASet()
{% endif %}
{% if field.isAList %}
  {{ spaces|format('') }}.asAList()
{% endif %}
{% if field.isAMap %}
  {{ spaces|format('') }}.asAMap()
{% endif %}
{% if field.required %}
  {{ spaces|format('') }}.required()
{% endif %}
{% if field.minLength %}
  {{ spaces|format('') }}.minLength({{ field.minLength }})
{% endif %}
{% if field.maxLength %}
  {{ spaces|format('') }}.maxLength({{ field.maxLength }})
{% endif %}
{% if field.pattern %}
  {{ spaces|format('') }}.pattern('{{ field.pattern }}')
{% endif %}
{% if field.format %}
  {{ spaces|format('') }}.format(Format.{{ field.format|upper }})
{% endif %}
{% if field.min %}
  {{ spaces|format('') }}.min({{ field.min }})
{% endif %}
{% if field.max %}
  {{ spaces|format('') }}.max({{ field.max }})
{% endif %}
{% if field.precision %}
  {{ spaces|format('') }}.precision({{ field.precision }})
{% endif %}
{% if field.scale %}
  {{ spaces|format('') }}.scale({{ field.scale }})
{% endif %}
{% if field.language('js').get('default') %}
{% if not field.language('js').get('hide_default') %}
  {{ spaces|format('') }}.withDefault({{ field.language('js').get('default')|reduceSpaces }})
{% endif %}
{% elseif field.default is not empty %}
  {{ spaces|format('') }}.withDefault({{ field.default|json_encode }})
{% endif %}
{% if not field.useTypeDefault %}
  {{ spaces|format('') }}.useTypeDefault(false)
{% endif %}
{% if field.anyOf %}
{% if field.anyOf|length == 1 %}
  {{ spaces|format('') }}.instance({{ getClassName(field.anyOf.0) }})
{% else %}
  {{ spaces|format('') }}.anyOfInstances([
{% for schema in field.anyOf %}
  {{ spaces|format('') }}  {{ getClassName(schema) }}{% if not loop.last %}, {% endif %}

{% endfor %}
  {{ spaces|format('') }}])
{% endif %}
{% elseif field.language('js').get('instance') %}
  {{ spaces|format('') }}.instance({{ field.language('js').get('instance').classname }})
{% endif %}
{% if field.overridable %}
  {{ spaces|format('') }}.overridable(true)
{% endif %}
{% if field.language('instance').get('assertion') %}
  {{ spaces|format('') }}.assertion({{ field.language('js').get('assertion')|reduceSpaces }})
{% endif %}
  {{ spaces|format('') }}.build(){% if not isLastItem %},{% endif %}

{% endmacro %}
