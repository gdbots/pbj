{% macro draw_field(field, spaces, isLastItem) %}
{% set spaces = '%' ~ spaces ~ 's' %}
  Fb::create('{{ field.name }}', T\{{ getClass(field.type) }}::create())
{% if field.isASingleValue %}
    {{ spaces|format('') }}->asASingleValue()
{% endif %}
{% if field.isASet %}
    {{ spaces|format('') }}->asASet()
{% endif %}
{% if field.isAList %}
    {{ spaces|format('') }}->asAList()
{% endif %}
{% if field.isAMap %}
    {{ spaces|format('') }}->asAMap()
{% endif %}
{% if field.required %}
    {{ spaces|format('') }}->required()
{% endif %}
{% if field.minLength %}
    {{ spaces|format('') }}->minLength({{ field.minLength }})
{% endif %}
{% if field.maxLength %}
    {{ spaces|format('') }}->maxLength({{ field.maxLength }})
{% endif %}
{% if field.pattern %}
    {{ spaces|format('') }}->pattern('/{{ field.pattern }}/')
{% endif %}
{% if field.format %}
    {{ spaces|format('') }}->format(Format::{{ field.format|upper }}())
{% endif %}
{% if field.min %}
    {{ spaces|format('') }}->min({{ field.min }})
{% endif %}
{% if field.max %}
    {{ spaces|format('') }}->max({{ field.max }})
{% endif %}
{% if field.precision %}
    {{ spaces|format('') }}->precision({{ field.precision }})
{% endif %}
{% if field.scale %}
    {{ spaces|format('') }}->scale({{ field.scale }})
{% endif %}
{% if field.languageKey('php', 'default') %}
    {{ spaces|format('') }}->withDefault({{ field.languageKey('php', 'default') }})
{% elseif field.default %}
    {{ spaces|format('') }}->withDefault({{ field.default|json_encode }})
{% endif %}
{% if field.useTypeDefault %}
    {{ spaces|format('') }}->useTypeDefault(true)
{% endif %}
{% if field.anyOf %}
{% if field.anyOf|length == 1 %}
    {{ spaces|format('') }}->className('{{ field.anyOf.0.languageKey('php', 'namespace') }}')
{% else %}
    {{ spaces|format('') }}->anyOfClassNames([{% for schema in field.anyOf %}'{{ schema.languageKey('php', 'namespace') }}'{% if not loop.last %}, {% endif %}{% endfor %}])
{% endif %}
{% elseif field.languageKey('php', 'class_name') %}
    {{ spaces|format('') }}->className('{{ field.languageKey('php', 'class_name') }}')
{% endif %}
{% if field.overridable %}
    {{ spaces|format('') }}->overridable(true)
{% endif %}
    {{ spaces|format('') }}->build(){% if not isLastItem %},{% endif %}

{% endmacro %}
