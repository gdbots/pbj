{% macro FieldCreate(field) %}
  Fb::create('{{ field.name }}', T\{{ class(field.type) }}::create())
{% endmacro %}

{% macro FieldAttributes(field) %}
  {% if field.isASingleValue %}
    ->asASingleValue()
  {% endif %}
  {% if field.isASet %}
    ->asASet()
  {% endif %}
  {% if field.isAList %}
    ->asAList()
  {% endif %}
  {% if field.isAMap %}
    ->asAMap()
  {% endif %}
  {% if field.required %}
    ->required(),
  {% endif %}
  {% if field.minLength %}
    ->minLength({{ field.minLength }}),
  {% endif %}
  {% if field.maxLength %}
    ->maxLength({{ field.maxLength }}),
  {% endif %}
  {% if field.pattern %}
    ->pattern('{{ field.pattern }}'),
  {% endif %}
  {% if field.format %}
    ->format(Format::{{ field.format|upper }}()),
  {% endif %}
  {% if field.min %}
    ->min({{ field.min }}),
  {% endif %}
  {% if field.max %}
    ->max({{ field.max }}),
  {% endif %}
  {% if field.precision %}
    ->precision({{ field.precision }}),
  {% endif %}
  {% if field.scale %}
    ->scale({{ field.scale }}),
  {% endif %}
  {% if field.useTypeDefault %}
    ->useTypeDefault(true),
  {% endif %}
  {% if field.languageOption('php', 'class_name') %}
    ->className('{{ field.languageOption('php', 'class_name') }}'),
  {% elseif field.className %}
    ->className('{{ field.className }}'),
  {% endif %}
  {% if field.anyOfClassNames %}
    ->anyOfClassNames({{ field.anyOfClassNames|json_encode }}),
  {% endif %}
  {% if field.overridable %}
    ->overridable(true),
  {% endif %}
{% endmacro %}

{% macro FieldEnd() %}
  ->build()
{% endmacro %}

{% macro BaseType(field) %}
  {{ _self.FieldCreate(field) }}
  {{ _self.FieldAttributes(field) }}
  {% if field.languageOption('php', 'default') %}
    ->withDefault('{{ field.languageOption('php', 'default') }}'),
  {% elseif field.default %}
    ->withDefault('{{ field.default }}'),
  {% endif %}
  {{ _self.FieldEnd() }}
{% endmacro %}

{% macro EnumType(field) %}
  {{ _self.FieldCreate(field) }}
  {{ _self.FieldAttributes(field) }}
  {% if field.languageOption('php', 'default') %}
    ->withDefault({{ field.languageOption('php', 'default') }}),
  {% elseif field.default %}
    ->withDefault({{ field.default }}),
  {% endif %}
  {{ _self.FieldEnd() }}
{% endmacro %}

{% macro StringEnumType(field) %}
  {{ _self.EnumType(field )}}
{% endmacro %}

{% macro IntEnumType(field) %}
  {{ _self.EnumType(field )}}
{% endmacro %}
