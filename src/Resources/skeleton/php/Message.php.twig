{% set className = getClassName(schema, true) %}
{% set insertionPoints = schema.language('php').get('insertion-points') %}
<?php

namespace {{ schema.language('php').get('namespace') }};

{% block use_statements %}
use Gdbots\Pbj\AbstractMessage;
use Gdbots\Pbj\FieldBuilder as Fb;
use Gdbots\Pbj\Schema;
use Gdbots\Pbj\Type as T;
{% set format_class = false %}
{% for field in schema.fields %}
{% if field.format %}
{% set format_class = true %}
{% endif %}
{% if field.language('php').get('classname') %}
use {{ field.language('php').get('classname') }};
{% endif %}
{% endfor %}
{% for mixin in schema.mixins %}
use {{ mixin.language('php').get('namespace') }}\{{ getClassName(mixin, true, className, true) }};
use {{ mixin.language('php').get('namespace') }}\{{ getClassName(mixin, true) }}Mixin;
use {{ mixin.language('php').get('namespace') }}\{{ getClassName(mixin, true) }}Trait;
{% endfor %}
{% if format_class %}
use Gdbots\Pbj\Enum\Format;
{% if insertionPoints %}
{{ indentString(insertionPoints.imports, 0) }}
{% endif %}
{% endif %}
{% endblock use_statements %}

{% block class_definition %}
final class {{ className }} extends AbstractMessage implements {{ getClassName(schema) }}{% for mixin in schema.mixins %}, {{ getClassName(mixin, true, className) }}{% endfor %}
{% if schema.mixins|length %}
  {# note: linebreak for cleaner print #}

{% endif %}
{% endblock class_definition %}
{
{% block class_body %}
{% for mixin in schema.mixins %}
    use {{ mixin.id.message|toCamelFromSlug }}V{{ mixin.id.version.major }}Trait;
{% endfor %}

    /**
     * @return Schema
     */
    protected static function defineSchema()
    {
        return new Schema('{{ schema.id }}', __CLASS__,
            [
{% import 'php/macros.php.twig' as macros %}
{% for field in schema.fields %}
              {{ macros.draw_field(field, 16, loop.last) }}
{%- endfor %}
            ],
            [
{% for mixin in schema.mixins %}
                {{ mixin.id.message|toCamelFromSlug }}V{{ mixin.id.version.major }}Mixin::create(){% if not loop.last %}, {% endif %}

{% endfor %}
            ]
        );
    }

{% if insertionPoints %}
{{ indentString(insertionPoints.methods, 4) }}
{% endif %}
{% endblock class_body %}
}
