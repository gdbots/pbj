<?php

namespace {{ schema.languages.php.namespace }};

{% block use_statements %}
use Gdbots\Pbj\AbstractMessage;
use Gdbots\Pbj\FieldBuilder as Fb;
use Gdbots\Pbj\Schema;
use Gdbots\Pbj\Type as T;
use Gdbots\Pbj\Enum\Format;
{% for field in schema.fields %}
{% if field.languageOption('php', 'class_name') %}
use {{ field.languageOption('php', 'class_name') }};
{% endif %}
{% endfor %}
{% for mixin in schema.mixins %}
use {{ mixin.languages.php.namespace }}\{{ mixin.className }}V{{ mixin.id.version.major }};
use {{ mixin.languages.php.namespace }}\{{ mixin.className }}V{{ mixin.id.version.major }}Mixin;
use {{ mixin.languages.php.namespace }}\{{ mixin.className }}V{{ mixin.id.version.major }}Trait;
{% endfor %}
{% endblock use_statements %}

{% block class_definition %}
class {{ schema.className }}V{{ schema.id.version.major }} extends AbstractMessage implements {{ schema.className }}{% for mixin in schema.mixins %}, {{ mixin.className }}V{{ mixin.id.version.major }}{% endfor %}
{% endblock class_definition %}
{
{% block class_body %}

    {% for mixin in schema.mixins %}
      use {{ mixin.className }}V{{ mixin.id.version.major }}Trait;
    {% endfor %}

    /**
     * @return Schema
     */
    protected static function defineSchema()
    {
        return new Schema('pbj:gdbots:pbjx:request:request-failed-response:1-0-0', __CLASS__,
            [
              {% import 'php/macros.php.twig' as macros %}
              {%- for field in schema.fields %}
                {{- macros.draw_field(field) }}{%- if not loop.last %},{% endif %}

              {% endfor -%}
            ], [
              {% for mixin in schema.mixins %}
                {{ mixin.className }}V{{ mixin.id.version.major }}Mixin::create(){%- if not loop.last %},{% endif %}
              {% endfor %}
            ]
        );
    }
{% endblock class_body %}
}
