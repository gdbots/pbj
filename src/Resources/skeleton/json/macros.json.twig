{% macro draw_schema(schema, deep) %}
{
  {% if not deep %}
    {% set deep = 0 %}
    "$schema": "http://json-schema.org/schema#",
  {% endif %}
  "id": "http://yourdomain.com/schemas/{{ schema.id.vendor }}/{{ schema.id.vendor }}/{{ schema.id.package }}/{{ schema.id.category }}/{{ schema.id.message }}/{{ schema.id.version }}.json",
  "type": "object",
  "properties": {
    {% for field in schema.fields %}
      {{ _self.draw_field(field) }}{% if not loop.last %},{% endif %}
    {% endfor %}
  },

  {% set required = [] %}
  {% for field in schema.fields %}
    {% if field.required %}
      {% set required = required|merge([field.name]) %}
    {% endif %}
  {% endfor %}
  {% if required|length %}
    "required": [{% for field in required %}"{{ field }}"{% if not loop.last %}, {% endif %}{% endfor %}],
  {% endif %}

  {% set defs = [] %}
  {% for field in schema.fields %}
    {% if field.anyOf %}
      {% set defs = defs|merge(field.anyOf) %}
    {% endif %}
  {% endfor %}
  {% if schema.mixins|length %}
    {% set defs = defs|merge(schema.mixins) %}
  {% endif %}
  {% if defs|length %}
    "definitions": {
      {% set shown = [] %}
      {% for def in defs %}
        {% if def.id not in shown %}
           "{{ def.id.message|toCamelFromSlug|lower }}": {{ _self.draw_schema(def, deep+1) }}{% if not loop.last %},{% endif %}
           {% set shown = shown|merge([def.id]) %}
         {% endif %}
      {% endfor %}
    },
  {% endif %}

  {% if schema.mixins|length %}
    "additionalProperties": {
      "mixin": [
        {% for mixin in schema.mixins %}
          {"$ref": "#/definitions/{{ mixin.id.message|toCamelFromSlug|lower }}" }{% if not loop.last %}, {% endif %}
        {% endfor %}
      ]
    }
  {% else %}
    "additionalProperties": false
  {% endif %}
}
{% endmacro %}

{% macro draw_field(field) %}
  "{{ field.name }}": {
    {% if field.type.typeName ~ '' in [
        'big-int', 'decimal', 'float', 'int-enum',
        'int', 'medium-int', 'microtime',
        'signed-big-int', 'signed-big-int', 'signed-medium-int',
        'signed-small-int', 'signed-tiny-int', 'small-int',
        'timestamp', 'tiny-int'
      ] %}
      "type": "number",
    {% elseif field.type.typeName ~ '' in ['boolean'] %}
      "type": "boolean",
    {% elseif field.type.typeName ~ '' in ['date', 'geo-point', 'message-ref', 'message'] %}
      "type": "object",
    {% else %}
      "type": "string",
    {% endif %}
    {% if field.required %}
      "required": true,
    {% endif %}
    {% if field.minLength %}
      "minLength": {{ field.minLength }},
    {% endif %}
    {% if field.maxLength %}
      "maxLength": {{ field.maxLength }},
    {% endif %}
    {% if field.min %}
      "minimum": {{ field.min }},
    {% endif %}
    {% if field.max %}
      "maximum": {{ field.max }},
    {% endif %}
    {% if field.pattern %}
      "pattern": "{{ field.pattern|replace({'\\': '\\\\'}) }}",
    {% endif %}
    {% if field.anyOf %}
      "anyOf": [
        {% for schema in field.anyOf %}
          { "$ref": "#/definitions/{{ schema.id.message|toCamelFromSlug|lower }}" }{% if not loop.last %}, {% endif %}
        {% endfor %}
      ],
    {% endif %}
    {% if field.enum %}
      "enum": [{% for value in field.enum.values %}"{{ value }}"{% if not loop.last %}, {% endif %}{% endfor %}],
    {% endif %}
    "additionalProperties": {
      "customType": "{{ field.type.typeName }}",
      {% if field.isASingleValue %}
        "aSingleValue": true,
      {% endif %}
      {% if field.isASet %}
        "aSet": true,
      {% endif %}
      {% if field.isAList %}
        "aList": true,
      {% endif %}
      {% if field.isAMap %}
        "aMap": true,
      {% endif %}
      {% if field.format %}
        "format": "{{ field.format }}",
      {% endif %}
      {% if field.precision %}
        "precision": {{ field.precision }},
      {% endif %}
      {% if field.scale %}
        "scale": {{ field.scale }},
      {% endif %}
      {% if field.default %}
        "withDefault": {{ field.default|json_encode }},
      {% endif %}
      {% if field.useTypeDefault %}
        "useTypeDefault": true,
      {% endif %}
      {% if field.overridable %}
        "overridable": true,
      {% endif %}
    }
  }
{% endmacro %}
