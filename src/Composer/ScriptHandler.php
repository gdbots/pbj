<?php

namespace Gdbots\Pbjc\Composer;

use Composer\Installer\PackageEvent;
use Composer\Package\PackageInterface;
use Symfony\Component\Filesystem\Filesystem;

// todo: clean this up, it seems mutant, addDir could be addDirs and accept an array.
class ScriptHandler
{
    /**
     * Auto registers the "pbj-schema-store" repos with the SchemaStore.
     *
     * @param PackageEvent $event
     */
    public static function writePbjSchemaStoresFile(PackageEvent $event)
    {
        if (!$event->isDevMode()) {
            return;
        }

        $dirs = [];
        /** @var PackageInterface $package */
        foreach ($event->getInstalledRepo()->getPackages() as $package) {
            if (!$package instanceof PackageInterface) {
                continue;
            }

            if ('pbj-schema-store' !== $package->getType()) {
                continue;
            }

            $dirs[] = $package->getName().'/schemas/';
        }

        if (empty($dirs)) {
            return;
        }

        $event->getIO()->write('<info>Writing "pbj-schema-store" locations to "pbj-schema-stores.php"</info>');
        $stores = '';

        foreach ($dirs as $dir) {
            $stores .= PHP_EOL."    \$vendorDir.'/{$dir}',";
        }

        $text = <<<TEXT
<?php
/**
 * DO NOT EDIT THIS FILE as it will be overwritten by Composer as part of
 * the installation/update process.
 *
 * Registers all directories from all required packages which are of
 * of the type "pbj-schema-store".
 */
\$vendorDir = realpath(__DIR__.'/vendor');

\\Gdbots\\Pbjc\\SchemaStore::addDirs([{$stores}
]);

TEXT;

        $fs = new Filesystem();
        $fs->dumpFile('pbj-schema-stores.php', $text);
    }
}
